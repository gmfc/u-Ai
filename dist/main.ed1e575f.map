{"version":3,"sources":["agents/Agent/index.js","ai/Ai/Action.js","ai/Ai/UtilityAi.js","ai/Ai/index.js","ai/SimpleAi.js","agents/SimpleAgent.js","WorldState/State/index.js","WorldState/SimpleState.js","main.js"],"names":["Agent","id","wState","ai","Error","tick","evaluate","Action","description","callback","_scores","_condition","_do","push","score","isNaN","_print_debug","console","log","data","debug","Infinity","map","_score","_validateScore","reduce","acc","UtilityAi","_actions","action","do","undefined","Ai","agent","addAction","SimpleAi","condition","isBlocked","talk","SimpleAgent","params","s","State","nOfAgents","agents","i","createAgent","SimpleState","Math","random","toString","substring","simulate","world","setInterval"],"mappings":"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","file":"main.ed1e575f.map","sourceRoot":"..","sourcesContent":["export default class Agent {\r\n    constructor({id}) {\r\n        this.id = id\r\n    }\r\n\r\n    get isBlocked() {\r\n        return false\r\n    }\r\n\r\n    tick() {\r\n        return true\r\n    }\r\n\r\n    simulate(wState) {\r\n        if (!this.ai) {\r\n            throw Error(\"Agent#Simulate#AI: Missing AI definition\")\r\n        }\r\n        this.tick()\r\n        this.ai.evaluate(wState, this)\r\n    }\r\n}","export default class Action {\r\n\r\n    constructor(description, callback) {\r\n        this.description = description\r\n        this._scores = []\r\n        this._condition = () => true\r\n        this._do = () => true\r\n\r\n        callback(this)\r\n    }\r\n\r\n    condition(callback) {\r\n        if (!callback) {\r\n            throw Error(\"UtilityAi#Action#condition: Missing callback\")\r\n        }\r\n\r\n        this._condition = callback\r\n    }\r\n\r\n    score(description, callback) {\r\n\r\n        if (!description) {\r\n            throw Error(\"UtilityAi#Action#score: Missing description\")\r\n        }\r\n        if (!callback) {\r\n            throw Error(\"UtilityAi#Action#score: Missing callback\")\r\n        }\r\n\r\n        this._scores.push({\r\n            description,\r\n            callback\r\n        })\r\n\r\n    }\r\n\r\n    do(callback) {\r\n        if (!callback) {\r\n            throw Error(\"UtilityAi#Action#do: Missing callback\")\r\n        }\r\n        this._do = callback\r\n    }\r\n\r\n    _validateScore(score) {\r\n        if (!isNaN(score) && typeof score === \"number\") {\r\n            return score\r\n        }\r\n        return 0\r\n    }\r\n\r\n    log(...msg) {\r\n        if (!this._print_debug) return\r\n        console.log(...msg)\r\n    }\r\n\r\n    evaluate(data, debug = false) {\r\n        this._print_debug = debug\r\n\r\n        this.log(\"Evaluate Action: \", this.description)\r\n        if (!this._condition(data)) {\r\n            this.log(\"Condition not fulfilled\")\r\n            return -Infinity\r\n        }\r\n\r\n        const score = this._scores\r\n            .map(score => {\r\n                const _score = this._validateScore(score.callback(data))\r\n                this.log(\"- \", score.description, _score)\r\n                return _score\r\n            })\r\n            .reduce((acc, score) => acc + score, 0)\r\n\r\n        this.log(\"Final Score: \", score)\r\n\r\n        return score\r\n    }\r\n}","import Action from './Action'\r\n\r\nexport default class UtilityAi {\r\n\r\n    constructor() {\r\n        this._actions = []\r\n    }\r\n\r\n    addAction(description, callback) {\r\n        if (!description) {\r\n            throw Error(\"UtilityAi#addAction: Missing description\")\r\n        }\r\n        if (!callback) {\r\n            throw Error(\"UtilityAi#addAction: Missing callback\")\r\n        }\r\n\r\n        const action = new Action(description, callback)\r\n\r\n        this._actions.push(action)\r\n    }\r\n\r\n    evaluate(data, debug = false) {\r\n        return this._actions\r\n            .map(action => ({\r\n                action: action.description,\r\n                score: action.evaluate(data, debug),\r\n                do: action._do\r\n            }))\r\n            .reduce((acc, action) => acc.score !== undefined && acc.score > action.score ? acc : action, {})\r\n    }\r\n\r\n}\r\n","import UtilityAi from './UtilityAi'\r\n\r\nexport default class Ai {\r\n    constructor(agent) {\r\n        this.agent = agent\r\n        this.ai = new UtilityAi()\r\n    }\r\n\r\n    addAction(description, callback) {\r\n        this.ai.addAction(description, callback)\r\n    }\r\n\r\n    evaluate(wState, agent) {\r\n        this.ai.evaluate({ wState, agent }).do({ wState, agent })\r\n    }\r\n}","import Ai from \"./Ai\"\r\n\r\nexport default class SimpleAi extends Ai {\r\n    constructor(agent) {\r\n        super(agent)\r\n\r\n        this.addAction('Will do', action => {\r\n\r\n            /*\r\n             * Condition blocking the action, only one per action\r\n             *\r\n             * wState - World State Object\r\n             * agent - agent Object Reference\r\n             */\r\n            action.condition(({wState, agent}) => {                \r\n                return !agent.isBlocked\r\n            })\r\n\r\n            \r\n            /*\r\n             * Action score. Hi score -> Action will trigger\r\n             * As many as you want \r\n             *\r\n             * wState - World State Object\r\n             * agent - agent Object Reference\r\n             */\r\n            action.score('100%', ({ wState, agent }) => 100)\r\n\r\n            \r\n            /*\r\n             * The action \r\n             *\r\n             * wState - World State Object\r\n             * agent - agent Object Reference\r\n             */\r\n            action.do(({ wState, agent }) => {\r\n                agent.talk('doing it!')\r\n            })\r\n\r\n        })\r\n\r\n        this.addAction('Wont do', action => {\r\n\r\n            action.condition(({wState, agent}) => {\r\n                return true\r\n            })\r\n\r\n            action.score('0%', ({ wState, agent }) => 0)\r\n\r\n            action.do(({ wState, agent }) => {\r\n                agent.talk('not doing it!')\r\n            })\r\n            \r\n        })\r\n    }\r\n}","import Agent from \"./Agent\"\r\nimport SimpleAi from '../ai/SimpleAi'\r\n\r\nexport default class SimpleAgent extends Agent {\r\n    constructor(params) {\r\n        super(params)\r\n        // AI instance and behavior\r\n        this.ai = new SimpleAi(this)\r\n    }\r\n\r\n    // Agent method\r\n    talk(s) {\r\n        console.log(`Agent: ${this.id} Sais: ${s}`);\r\n    }\r\n}","export default class State {\r\n\r\n    constructor(nOfAgents) {\r\n        console.log('creating state');\r\n\r\n        this.agents = {}\r\n        for (let i = 0; i < nOfAgents; i++) {\r\n            console.log('creating agent');\r\n            this.createAgent()\r\n        }\r\n    }\r\n\r\n    createAgent() {\r\n        throw Error('State#createAgent - Not defined!')\r\n    }\r\n\r\n    simulate() {\r\n        throw Error('State#simulate - Not defined!')\r\n    }\r\n}","import SimpleAgent from '../agents/SimpleAgent'\r\nimport State from './State'\r\n\r\nexport default class SimpleState extends State {\r\n\r\n    constructor(nOfAgents) {\r\n        super(nOfAgents)\r\n    }\r\n\r\n    createAgent() {\r\n        let id = Math.random().toString(36).substring(7)\r\n        this.agents[id] = new SimpleAgent({ id })\r\n    }\r\n\r\n    simulate() {\r\n        for (const id in this.agents) {\r\n            this.agents[id].simulate(this)\r\n        }\r\n    }\r\n}","import SimpleState from './WorldState/SimpleState'\r\n\r\nlet world = new SimpleState(5)\r\n\r\nsetInterval(() => {    \r\n    world.simulate()\r\n}, 1000)"]}